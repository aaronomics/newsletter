install.packages("nhlapi")
install.packages("ggplot2")
library(nhlapi)
library(ggplot2)
library(nhlapi)
library(ggplot2)
did_wings_play = function(){
yday = Sys.Date() - 1
#games_today = nhlapi::nhl_schedule_today()
games_today = nhlapi::nhl_schedule_date_range(yday, yday)[[1]]
games = games_today$dates$games[[1]]
for (i in 1:nrow(games)){
homeid = games$teams.home.team.id[i]
#print(homeid)
awayid = games$teams.away.team.id[i]
#print(awayid)
if ( homeid == 17){
wings_game_id = games$gamePk[i]
} else if (awayid == 17) {
wings_game_id = games$gamePk[i]
}
}
return(wings_game_id)
}
game_id = did_wings_play()
install.packages("curl")
library(nhlapi)
library(ggplot2)
library(curl)
library(nhlapi)
library(ggplot2)
did_wings_play = function(){
yday = Sys.Date() - 1
#games_today = nhlapi::nhl_schedule_today()
games_today = nhlapi::nhl_schedule_date_range(yday, yday)[[1]]
games = games_today$dates$games[[1]]
for (i in 1:nrow(games)){
homeid = games$teams.home.team.id[i]
#print(homeid)
awayid = games$teams.away.team.id[i]
#print(awayid)
if ( homeid == 17){
wings_game_id = games$gamePk[i]
} else if (awayid == 17) {
wings_game_id = games$gamePk[i]
}
}
return(wings_game_id)
}
game_id = did_wings_play()
### single game live event stats
live_feed = function() {
todays_game = nhlapi::nhl_games_feed(game_id)[[1]]
plays = todays_game$liveData
return(plays)
}
game_events = live_feed()
View(game_events)
all_plays = game_events$plays$allPlays
all_plays
View(all_plays)
did_wings_play = function(){
yday = Sys.Date() - 1
#games_today = nhlapi::nhl_schedule_today()
games_today = nhlapi::nhl_schedule_date_range(yday, yday)[[1]]
games = games_today$dates$games[[1]]
for (i in 1:nrow(games)){
homeid = games$teams.home.team.id[i]
#print(homeid)
awayid = games$teams.away.team.id[i]
#print(awayid)
if ( homeid == 17){
wings_game_id = games$gamePk[i]
} else if (awayid == 17) {
wings_game_id = games$gamePk[i]
}
}
return(wings_game_id)
}
game_id = did_wings_play()
plays = as.data.frame(game_events$plays$allPlays)
plays
players = plays$players
#players
shots = plays[plays$result.event == "Shot",]
shots
goals = plays[plays$result.event == "Goal",]
goals
#attempting to plot shots
plot(shots$coordinates.x, shots$coordinates.y, axes = TRUE)
abline(v=-25, col='blue')
abline(v=25, col='blue')
abline(v=0, col='red')
abline(v=-89, col='red')
abline(v=89, col='red')
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(Sleuth3)
library(mosaic)
library(gmodels)
dat = case0601
#a
fs = favstats(Score ~ Handicap, data = dat)
fs
ni = fs$n
meani = fs$mean
sdi = fs$sd
c(ni, meani, sdi)
#b
sp2 = sum((ni-1)*sdi^2)/sum(ni-1)
sp = sqrt(sp2)
df = sum(ni)-5
c(sp2,sp,df)
#c
g1 = (meani[1]+meani[5])/2
SEg1 = sp*sqrt((1/2)^2/ni[1]+(1/2)^2/ni[5])
cig1 = c(g1-qt(0.975,df)*SEg1, g1+qt(0.975,df)*SEg1)
cig1
#d
g2 = (meani[2]+meani[4])/2
SEg2 = sp*sqrt((1/2)^2/ni[2]+(1/2)^2/ni[4])
cig2 = c(g2 - qt(0.975, df)*SEg2, g2 + qt(0.975, df)*SEg2)
cig2
Tg2 = (g2 - 4)/SEg2
pg2 = 2*pt(abs(Tg2), df, lower.tail = F)
c(Tg2, pg2)
#e
g3 = g1 - g2
SEg3 = sp*sqrt((1/2)^2/ni[1] + (1/2)^2/ni[5] + (1/2)^2/ni[2] + (1/2)^2/ni[4])
cig3 = c(g3-qt(0.975,df)*SEg3, g3+qt(0.975,df)*SEg3)
cig3
#f H0: gamma3 = 0
T = (g3)/SEg3
pvalue = 2*pt(abs(T), df, lower.tail = F)
c(T, pvalue)
#g H-: gamma = 0.4
T = (g3 - 0.4)/SEg3
pvalue = 2*pt(abs(T), df, lower.tail = F)
c(T, pvalue)
#h
hT=(meani[1]-meani[2]+meani[3]+meani[4]-meani[5])/
(sp*sqrt(1/ni[1]+1/ni[2]+1/ni[3]+1/ni[4]+1/ni[5]))
pvalue=2*pt(abs(hT),df, lower.tail=F)
c(hT,pvalue)
#My conclusion is that we can reject the null in favor of the alternative
#i
hT=(meani[1]-meani[2]+meani[4]-meani[5])/
(sp*sqrt(1/ni[1]+1/ni[2]+1/ni[4]+1/ni[5]))
pvalue=2*pt(abs(hT),df, lower.tail=F)
c(hT,pvalue)
#Based on pvalue, we can reject the null in favor of the alternative
#j
pairwise.t.test(case0601$Score, case0601$Handicap, p.adjust.method = "none")
pairwise.t.test(case0601$Score, case0601$Handicap, p.adjust.method = "bonf")
#not entirely sure if the bonferroni is necessary, but I'm going pretty heavily off of the activity, sooooo why not??
install.packages("pdflatex")
library(tinytex)
